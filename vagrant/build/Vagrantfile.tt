VAGRANTFILE_API_VERSION = '[% vagrant.api_version %]'
Vagrant.require_version '>= [% vagrant.require_version %]'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
    config.vm.box         = '[% image.name %]'
    config.vm.box_version = '[% image.version %]'

    [%- IF virtualbox %]
    config.vm.provider 'virtualbox' do |vb|
        vb.gui = false
        [%- FOR setting IN virtualbox %]
        vb.customize ['modifyvm', :id, '--[% setting.keys.0 %]', '[% setting.values.0 %]']
        [%- END %]
    end
    [% END -%]

    config.ssh.shell = 'bash -c "BASH_ENV=/etc/profile exec bash"'

    config.vm.provision 'shell', inline: %q(
        DEBIAN_FRONTEND=noninteractive apt-get -yq update
        DEBIAN_FRONTEND=noninteractive apt-get -yq remove --purge grub-pc
        DEBIAN_FRONTEND=noninteractive apt-get -yq upgrade
        DEBIAN_FRONTEND=noninteractive apt-get -yq autoremove
    )

    [%- IF ansible_user %]
    config.vm.provision 'shell',
        name: 'Ansible User',
        path: '../../providers/ansible_user.bash',
        env: { 'LOCAL_DIR' => '[% synced_folder %]/local' }
    [% END -%]

    [%- FOR host IN hosts -%]
    [%- hostname = host.keys.0 -%]
    [%- host = host.values.0 %]
    config.vm.define '[% hostname %]' do |node|
        node.vm.hostname = '[% hostname %]'
        node.vm.provider 'virtualbox' do |vb|
            vb.name   = '[% host.name %]'
            vb.memory = [% host.memory %]
            vb.cpus   = [% host.cpus %]
        end

        [%- FILTER replace( "\n[ ]+\n", "\n" ) %]
        [%- IF host.network.private_network %]
        node.vm.network 'private_network', ip: '[% host.network.private_network %]'
        [% END -%]
        [%- IF host.network.public_network %]
        node.vm.network 'public_network', use_dhcp_assigned_default_route: true, bridge: [
            'Private Internet Access Network Adapter',
            'Realtek PCIe GBE Family Controller',
            'Surface Ethernet Adapter',
        ]
        [% END -%]
        [%- IF host.network.remap_ssh %]
        node.vm.network 'forwarded_port', guest: 22, host: 2222, id: 'ssh', disabled: true
        node.vm.network 'forwarded_port', host_ip: '127.0.0.1', guest: 22, host: [% host.network.remap_ssh %]
        [% END -%]
        [% END -%]

        node.vm.synced_folder '../../../', '[% synced_folder %]', SharedFoldersEnableSymlinksCreate: false
        [%- IF host.ansible %]

        node.vm.provision 'shell',
            name: 'Ansible',
            path: '../../providers/ansible.bash',
            env: {
                'HOSTS'     => '[% synced_folder %]/vagrant/configs/[% project %]/hosts',
                'LOCAL_DIR' => '[% synced_folder %]/local',
            }

        node.vm.provision 'shell',
            name: 'Ansible Playbook: [% host.ansible.inventory %] [% host.ansible.playbook
                %][% IF host.ansible.limit %] ([% host.ansible.limit %])[% END %]',
            inline: %q(
                su -l ansible -c 'cd /host/ansible; \\
                PYTHONUNBUFFERED=1 ANSIBLE_CONFIG=ansible.cfg LOCAL_DIR=/host/local SRC_DIR=/host \\
                ansible-playbook [% IF host.ansible.limit %]-l [% host.ansible.limit %] [% END
                    %]-i [% host.ansible.inventory %] [% host.ansible.playbook %]'
            )
        [%- END %]
    end

    [%- END -%]
end
