---
- name: install python-passlib
  apt:
    update_cache: yes
    cache_valid_time: 86400
    autoclean: yes
    autoremove: yes
    pkg: python-passlib
    state: latest

- name: install FastCGI Perl
  include_role:
    name: fastcgi_perl
    allow_duplicates: no
    public: yes

- name: install FastCGI PHP
  include_role:
    name: fastcgi_php
    allow_duplicates: no
    public: yes

- name: ensure credentials.ini exists
  ini_file:
    dest: "{{ local_dir }}/credentials.ini"
    section: global
    option: answer
    value: 42
  when: local_dir is defined

- name: load user name
  set_fact:
    user: "{{ lookup( 'ini', 'user file={{ local_dir }}/credentials.ini default=user' ) }}"
  when:
    - local_dir is defined
    - user == '' or user == []

- name: load user password
  set_fact:
    user_password: "{{ lookup( 'ini', 'user_password file={{ local_dir }}/credentials.ini' ) }}"
  when: local_dir is defined and ( user_password == '' or user_password == [] )

- htpasswd:
    path: /etc/nagios/htpasswd.users
    name: "{{ user }}"
    password: "{{ user_password }}"
    owner: root
    group: root
    mode: 0640
  when:
    - user is defined
    - user_password is defined

- name: build nagios web site conf
  template:
    src: web_site.j2
    dest: /etc/nginx/sites-available/nagios
  register: web_conf

- name: set nagios web site conf active
  file:
    src: /etc/nginx/sites-available/nagios
    dest: /etc/nginx/sites-enabled/nagios
    state: link

- name: restart nginx
  service:
    name: nginx
    state: restarted
  when: web_conf is changed

- name: set nagios admin auth
  replace:
    dest: /etc/nagios/cgi.cfg
    regexp: '(authorized_for_[^=]+=nagiosadmin)$'
    replace: '\1,{{ user }}'
  register: nagios_conf

- name: restart nagios
  service:
    name: nagios
    state: restarted
  when: nagios_conf is changed
