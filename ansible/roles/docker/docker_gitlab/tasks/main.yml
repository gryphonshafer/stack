---
- name: gitlab host storage
  file:
    path: /opt/gitlab
    state: directory
    mode: 0755

- name: pull latest gitlab image
  docker_image:
    name: gitlab/gitlab-ce:latest
  register: pull_image

- name: gitlab container run
  docker_container:
    recreate: yes
    name: gitlab
    hostname: "{{ ansible_hostname }}.{{ domain }}"
    restart_policy: unless-stopped
    image: gitlab/gitlab-ce:latest
    published_ports:
      - "5880:80"
      - "6722:22"
    volumes:
      - "/opt/gitlab/config:/etc/gitlab"
      - "/opt/gitlab/logs:/var/log/gitlab"
      - "/opt/gitlab/data:/var/opt/gitlab"
  when: pull_image is changed

- name: manual restart bash script
  template:
    src: docker_gitlab_upgrade.bash.j2
    dest: /root/docker_run_gitlab.bash
    owner: root
    group: root
    mode: 0744

- name: insert nginx 80 block
  blockinfile:
    path: "/etc/nginx/sites-available/{{ domain }}"
    block: "{{ lookup( 'template', 'nginx_80_block.j2' ) }}"
    insertbefore: '^\} # 80$'
  changed_when: no

- name: adjust nginx server names
  replace:
    path: "/etc/nginx/sites-available/{{ domain }}"
    regexp: '^(\s+server_name\s){{ domain }} '
    replace: '\1{{ ansible_hostname }}.{{ domain }} {{ domain }} '
  changed_when: no

- name: adjust nginx proxy_pass
  replace:
    path: "/etc/nginx/sites-available/{{ domain }}"
    regexp: '^(\s+proxy_pass http://localhost);'
    replace: '\1:5880;'
  changed_when: no

- name: restart nginx
  service:
    name: nginx
    state: restarted
  when: pull_image is changed

- stat:
    path: /etc/shorewall/rules.d
  register: st

- name: install shorewall rules
  copy:
    src: shorewall.rules
    dest: /etc/shorewall/rules.d/gitlab
  when: st.stat.exists == true
  register: shorewall_rules

- name: restart shorewall
  service:
    name: shorewall
    state: restarted
  when: shorewall_rules is changed
