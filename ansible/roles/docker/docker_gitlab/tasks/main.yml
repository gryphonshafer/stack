---
- name: gitlab host storage
  file:
    path: /opt/gitlab
    state: directory
    mode: 0755

- name: pull latest gitlab image
  docker_image:
    name: gitlab/gitlab-ce:latest
  register: pull_image

- name: gitlab container run
  docker_container:
    recreate: yes
    name: gitlab
    hostname: "{{ inventory_hostname }}.{{ domain }}"
    restart_policy: unless-stopped
    image: gitlab/gitlab-ce:latest
    published_ports:
      - "5880:80"
      - "6722:22"
    volumes:
      - "/opt/gitlab/config:/etc/gitlab"
      - "/opt/gitlab/logs:/var/log/gitlab"
      - "/opt/gitlab/data:/var/opt/gitlab"
  environment:
    GITLAB_OMNIBUS_CONFIG: |
      external_url "https://{{ inventory_hostname }}.{{ domain }}"
      gitlab_rails['time_zone'] = 'America/Los_Angeles'
      gitlab_rails['gitlab_shell_ssh_port'] = 6722
      gitlab_rails['gitlab_email_from'] = 'git@{{ domain }}'
      gitlab_rails['gitlab_email_reply_to'] = 'git@{{ domain }}'
      gitlab_rails['smtp_enable'] = true
      gitlab_rails['smtp_domain'] = "{{ domain }}"
      gitlab_rails['smtp_address'] = "{{ mailhost }}"
      gitlab_rails['smtp_tls'] = true
      gitlab_rails['smtp_port'] = 465
      gitlab_rails['smtp_authentication'] = "plain"
      gitlab_rails['smtp_user_name'] = "{{ user }}"
      gitlab_rails['smtp_password'] = "{{ user_password }}"
  when: pull_image is changed

- name: manual restart bash script
  template:
    src: docker_gitlab_upgrade.bash.j2
    dest: /root/docker_run_gitlab.bash
    owner: root
    group: root
    mode: 0744

- name: insert nginx 80 block
  blockinfile:
    path: "/etc/nginx/sites-available/{{ domain }}"
    block: "{{ lookup( 'template', 'nginx_80_block.j2' ) }}"
    insertbefore: '^\} # 80$'
    marker: '    # {mark} ANSIBLE MANAGED BLOCK'

- name: adjust nginx server names
  replace:
    path: "/etc/nginx/sites-available/{{ domain }}"
    regexp: '^(\s+server_name\s){{ domain }} '
    replace: '\1{{ inventory_hostname }}.{{ domain }} {{ domain }} '

- name: adjust nginx proxy_pass
  replace:
    path: "/etc/nginx/sites-available/{{ domain }}"
    regexp: '^(\s+proxy_pass http://localhost);'
    replace: '\1:5880;'

- name: restart nginx
  service:
    name: nginx
    state: restarted
  when: pull_image is changed

- stat:
    path: /etc/shorewall/rules.d
  register: st

- name: install shorewall rules
  copy:
    src: shorewall.rules
    dest: /etc/shorewall/rules.d/gitlab
  when: st.stat.exists == true
  register: shorewall_rules

- name: restart shorewall
  service:
    name: shorewall
    state: restarted
  when: shorewall_rules is changed

- import_tasks: ../../../end.yml
