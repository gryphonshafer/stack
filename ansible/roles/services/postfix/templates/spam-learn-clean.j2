#!/usr/bin/env perl
use strict;
use warnings;
use Net::IMAP::Simple;
use Date::Calc qw( Delta_Days Today );

my $conf = {
    execute  => 1,
    log_file => '/root/spam-learn-clean.log',
    server   => '{{ mailhost }}',
    accounts => [
        {
            user    => '{{ user }}',
            passwd  => '{{ user_password }}',
            domains => [ '{{ domain }}' ],
        },
    ],
    del_folders => {
        Trash => 0,
        Sent  => 182, # 26 weeks (half a year)
    },
    mail_dir => '/var/vmail',
    learning => {
        spam => ['.Junk/cur'],
        ham  => ['.Trash/cur'],
    },
    months => { qw(
        Jan 1 Feb 2 Mar 3 Apr  4 May  5 Jun  6
        Jul 7 Aug 8 Sep 9 Oct 10 Nov 11 Dec 12
    ) },
};

open( my $log_file, '>', $conf->{log_file} ) if ( $conf->{log_file} );

for my $account ( @{ $conf->{accounts} } ) {
    for my $domain ( @{ $account->{domains} } ) {
        for my $type ( keys %{ $conf->{learning} } ) {
            for my $suffix ( @{ $conf->{learning}{$type} } ) {
                my $command = join( ' ',
                    'sa-learn',
                    '--' . $type,
                    join( '/', $conf->{mail_dir}, $domain, $account->{user}, $suffix ),
                );
                print $log_file $command, "\n" if ( $conf->{log_file} );
                system($command) if ( $conf->{execute} );
           }
        }

        my $user = $account->{user} . '@' . $domain;
        my $imap;
        while ( not $imap ) {
            eval { $imap = Net::IMAP::Simple->new( $conf->{server} ) };
            if ($@) {
                warn $@;
                sleep 1;
            }
        }
        $imap->login( $user, $account->{passwd} ) or die "Failed to login to IMAP server\n";

        my @scores = ();
        my $record_score = sub {
            my ($score) = map { /: ([\d\.]+)/; $1 } grep { /^X-Spam-Score:/ } @{ $imap->top( $_[0] ) };
            push( @scores, $score ) if ($score);
        };
        my $report_score = sub {
            if ( $conf->{log_file} and @scores > 1 ) {
                my $total = 0;
                $total += $_ for (@scores);
                my $mean = $total / @scores;

                my $sqtotal = 0;
                $sqtotal += ( $mean - $_ ) ** 2 for (@scores);
                my $std = ( $sqtotal / ( @scores - 1 ) ) ** 0.5;

                @scores = sort { $a <=> $b } @scores;
                my $median = $scores[ int( @scores / 2 ) ];

                printf $log_file "%8s: %6.3f\n", @$_ for (
                    [   'Min.' => $scores[0]  ],
                    [   'Mean' => $mean       ],
                    [   'STD.' => $std        ],
                    [ 'Median' => $median     ],
                    [   'Max.' => $scores[-1] ],
                );
            }

            @scores = ();
        };

        print $log_file "Deleting out of $user Junk\n" if ( $conf->{log_file} );
        for ( 1 .. $imap->select('INBOX.Junk') ) {
            $record_score->($_);
            $imap->delete($_) if ( $conf->{execute} );
        }
        $report_score->();

        for my $folder ( keys %{ $conf->{del_folders} } ) {
            print $log_file "Pruning $user $folder\n" if ( $conf->{log_file} );
            for my $email_id ( 1 .. $imap->select( 'INBOX.' . $folder ) ) {
                $record_score->($email_id) if ( $folder eq 'Trash' );

                my $lines   = '';
                my $flagged = $imap->_process_cmd(
                    cmd     => [ 'FETCH' => $email_id . ' (FLAGS)' ],
                    final   => sub { $lines =~ /\bFlagged\b/ },
                    process => sub { $lines .= $_[0] },
                ) || 0;
                next if ($flagged);

                my ($date) = grep { /^Date: /i } @{ $imap->top($email_id) };
                next unless ($date);

                my ( $day, $month, $year ) = $date =~ /\s(\d{1,2})\s(\w{3})\s(\d{4})\s/;
                next unless ( $month and $conf->{months}{$month} );

                my $days = Delta_Days( $year, $conf->{months}{$month}, $day, Today() );
                if ( $days and $days > $conf->{del_folders}{$folder} ) {
                    $imap->delete($email_id) if ( $conf->{execute} );
                }
            }
            $report_score->() if ( $folder eq 'Trash' );
        }

        $imap->quit();
    }
}

system('sa-update --no-gpg') if ( $conf->{execute} );
