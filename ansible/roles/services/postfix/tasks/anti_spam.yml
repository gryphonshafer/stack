---
- name: install anti-spam packages
  apt:
    update_cache: yes
    cache_valid_time: 86400
    autoclean: yes
    autoremove: yes
    pkg: '{{ anti_spam_packages }}'
    state: latest

- name: bypass spam amavis conf
  replace:
    dest: /etc/amavis/conf.d/15-content_filter_mode
    regexp: '#(\@bypass_spam.*?;)'
    replace: '\1'
  notify: restart amavis

- name: copy amavis/50-user
  template:
    src: amavis_50-user.j2
    dest: /etc/amavis/conf.d/50-user
  notify: restart amavis

- name: myhostname set in 05-node_id
  lineinfile:
    path: /etc/amavis/conf.d/05-node_id
    insertafter: '#\$myhostname'
    line: '$myhostname = "{{ mailhost }}";'
  notify: restart amavis

- name: copy main.cf.d/30_anti_spam.cf
  copy:
    src: main.cf.d/30_anti_spam.cf
    dest: /etc/postfix/main.cf.d/30_anti_spam.cf
  notify: assemble main_cf

- name: copy master.cf.d/01_amavis.cf
  copy:
    src: master.cf.d/01_amavis.cf
    dest: /etc/postfix/master.cf.d/01_amavis.cf
  notify: assemble master_cf

- name: install zor packages
  apt:
    update_cache: yes
    cache_valid_time: 86400
    autoclean: yes
    autoremove: yes
    pkg: '{{ zor_packages }}'
    state: latest
  notify: restart rsyslog
  register: install_zor

- name: install dcc
  apt:
    deb: '{{ item }}'
  with_items:
    - http://launchpadlibrarian.net/11565552/dcc-common_1.3.42-5_amd64.deb
    - http://launchpadlibrarian.net/11565554/dcc-server_1.3.42-5_amd64.deb
  when: install_zor.changed
  notify: restart rsyslog

- name: spamassassin local.cf
  blockinfile:
    path: /etc/spamassassin/local.cf
    block: |
      #dcc
      use_dcc 1
      dcc_path /usr/bin/dccproc
      #pyzor
      use_pyzor 1
      pyzor_path /usr/bin/pyzor
      #razor
      use_razor2 1
      razor_config /etc/razor/razor-agent.conf
      #bayes
      use_bayes 1
      use_bayes_rules 1
      bayes_auto_learn 1
  notify: restart spamassassin

- name: spamassassin v310.pre
  replace:
    dest: /etc/spamassassin/v310.pre
    regexp: '#(loadplugin Mail::SpamAssassin::Plugin::DCC)'
    replace: '\1'
  notify: restart spamassassin

- name: spamassassin 65_debian.cf
  replace:
    dest: /etc/spamassassin/65_debian.cf
    regexp: '(^score RCVD_IN_BRBL_LASTEXT 0)'
    replace: '#\1'
  notify: restart spamassassin

- name: spamassassin enabled
  replace:
    dest: /etc/default/spamassassin
    regexp: 'ENABLED=0'
    replace: 'ENABLED=1'
  register: spamassassin_enabled
  notify: restart spamassassin

- name: refresh spamassassin mirrors
  command: sa-update --no-gpg --refreshmirrors -v
  when: spamassassin_enabled.changed
  notify: restart spamassassin

- name: mkdir mail-tools
  file:
    path: /root/mail-tools
    state: directory

- name: setup utility scripts
  copy:
    src: 'mail-tools/{{ item }}'
    dest: '/root/mail-tools/{{ item }}'
    mode: '0744'
  with_items:
    - clear-queue
    - mail-action

- set_fact:
    local_dir: "{{ lookup( 'env', 'LOCAL_DIR' ) }}"

- name: ensure credentials.ini exists
  ini_file:
    dest: "{{ local_dir }}/credentials.ini"
    section: global
    option: answer
    value: "42"
  when: local_dir is defined

- name: load user password
  set_fact:
    user_password: "{{ lookup( 'ini', 'user_password file={{ local_dir }}/credentials.ini' ) }}"
  when: local_dir is defined

- stat:
    path: /usr/local/bin/cpanm
  register: cpanm

- name: install cpamn
  shell: curl -L https://cpanmin.us | perl - --sudo App::cpanminus
  when: sw_st.stat.exists == true and f2b_st.stat.exists == true and cpanm.stat.exists == false
  args:
    warn: false

- name: install Net::IMAP::Simple and Date::Calc
  shell: cpanm -n -f Net::IMAP::Simple Date::Calc
  when: sw_st.stat.exists == true and f2b_st.stat.exists == true and cpanm.stat.exists == false

- name: spam-learn-clean
  template:
    src: spam-learn-clean.j2
    dest: /etc/cron.monthly/spam-learn-clean
    mode: '0700'
